/* tslint:disable */
/* eslint-disable */
/**
 * ServerC
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface TestResult
 */
export interface TestResult {
    /**
     * 
     * @type {number}
     * @memberof TestResult
     */
    testResultId?: number;
    /**
     * 
     * @type {number}
     * @memberof TestResult
     */
    featureId?: number | null;
    /**
     * 
     * @type {string}
     * @memberof TestResult
     */
    resultsJson?: string | null;
    /**
     * 
     * @type {number}
     * @memberof TestResult
     */
    userId?: number | null;
    /**
     * 
     * @type {Date}
     * @memberof TestResult
     */
    date?: Date | null;
}

/**
 * Check if a given object implements the TestResult interface.
 */
export function instanceOfTestResult(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function TestResultFromJSON(json: any): TestResult {
    return TestResultFromJSONTyped(json, false);
}

export function TestResultFromJSONTyped(json: any, ignoreDiscriminator: boolean): TestResult {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'testResultId': !exists(json, 'testResultId') ? undefined : json['testResultId'],
        'featureId': !exists(json, 'featureId') ? undefined : json['featureId'],
        'resultsJson': !exists(json, 'resultsJson') ? undefined : json['resultsJson'],
        'userId': !exists(json, 'userId') ? undefined : json['userId'],
        'date': !exists(json, 'date') ? undefined : (json['date'] === null ? null : new Date(json['date'])),
    };
}

export function TestResultToJSON(value?: TestResult | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'testResultId': value.testResultId,
        'featureId': value.featureId,
        'resultsJson': value.resultsJson,
        'userId': value.userId,
        'date': value.date === undefined ? undefined : (value.date === null ? null : value.date.toISOString()),
    };
}

